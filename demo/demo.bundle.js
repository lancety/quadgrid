(()=>{"use strict";const e={level:0,covered:1,taken:2},n=1200,t=1e3;let s=0,o=Math.min(n,t);for(;o>2;)o/=2,s++;const i=new class{constructor(n,t,s=6){this.width=n,this.height=t,this.cellDepthMax=s,this.cellBatchSize=1e5,this.nodesInfoSize=Object.keys(e).length,this.nodeAnchor=0,this.cellMinSize=Math.min(n,t)/Math.pow(2,s),this.nodeBounds=new Float32Array(4*this.cellBatchSize),this.nodesRef=new Int32Array(4*this.cellBatchSize),this.nodesInfo=new Int8Array(this.cellBatchSize*this.nodesInfoSize),this.newNode(n/2,t/2,n/2,t/2,0)}newNode(e,n,t,s,o){const i=4*this.nodeAnchor;this.nodeBounds[i]=e,this.nodeBounds[i+1]=n,this.nodeBounds[i+2]=t,this.nodeBounds[i+3]=s,this.nodesInfo[3*this.nodeAnchor]=o;const d=this.nodeAnchor;return this.nodeAnchor++,d}split(n){const t=4*n,s=this.nodesInfo[n*this.nodesInfoSize+e.level]+1,o=this.nodeBounds[t],i=this.nodeBounds[t+1],d=this.nodeBounds[t+2]/2,h=this.nodeBounds[t+3]/2;this.nodesRef.set([this.newNode(o-d,i-h,d,h,s),this.newNode(o+d,i-h,d,h,s),this.newNode(o+d,i+h,d,h,s),this.newNode(o-d,i+h,d,h,s)],t)}getIndex(e,n){let t=0,s=this.nodeBounds[e],o=this.nodeBounds[e+1];const i=n[1]-n[3]<o,d=n[0]-n[2]<s,h=n[0]+n[2]>s,r=n[1]+n[3]>o;return d&&i&&(t|=1),i&&h&&(t|=2),h&&r&&(t|=4),d&&r&&(t|=8),t}merge(e){this.nodesRef.set([0,0,0,0],e)}inside(e,n){const t=this.nodeBounds[e]-n[0],s=this.nodeBounds[e+1]-n[1],o=this.nodeBounds[e+2]-n[2],i=this.nodeBounds[e+3]-n[3];return o<=0&&i<=0&&t-o>=0&&s-i>=0&&t+o<=0&&s+i<=0}insertBatch(e,n,t){const s=this.getIndex(e,n);1&s&&this[t](this.nodesRef[e],n),2&s&&this[t](this.nodesRef[e+1],n),4&s&&this[t](this.nodesRef[e+2],n),8&s&&this[t](this.nodesRef[e+3],n)}insert(n,t){const s=4*n,o=n*this.nodesInfoSize;!0===this.inside(s,t)?1!==this.nodesInfo[o+e.covered]&&(this.merge(s),this.nodesInfo[o+e.taken]=1,this.nodesInfo[o+e.covered]=1):(this.nodesInfo[o+e.level]<this.cellDepthMax&&!this.nodesInfo[o+e.covered]&&!this.nodesRef[s]&&this.split(n),this.nodesRef[s]&&this.insertBatch(s,t,"insert"),0===this.nodesRef[s]?this.nodesInfo[o+e.taken]=1:this.nodesInfo[o+e.taken]=0)}}(n,t,s),d={rects:[]},h=document.getElementById("canvas");h.setAttribute("width","1200"),h.setAttribute("height","1000"),h.style.background="#111";const r=h.getContext("2d");function c(e,n){return Math.round(e+Math.random()*(n-e))}function f(n){if(0===n)return;const t=4*(n||0);if(i.nodesRef[t])for(let e=0;e<4;e++)f(i.nodesRef[t+e]);else{const s=n*i.nodesInfoSize;i.nodesInfo[s+e.taken]||(r.strokeStyle="rgba(0, 255, 0, 0.4)",r.strokeRect(...u(i.nodeBounds.subarray(t,t+4))))}}function l(n){if(0===n)return;const t=4*(n||0);if(i.nodesRef[t])for(let e=0;e<4;e++)l(i.nodesRef[t+e]);else{const s=n*i.nodesInfoSize;i.nodesInfo[s+e.taken]&&(r.fillStyle="rgba(6, 6, 6, 0.8)",r.strokeRect(...u(i.nodeBounds.subarray(t,t+4))))}}function a(n){if(0===n)return;const t=4*(n||0);if(i.nodesRef[t])for(let e=0;e<4;e++)a(i.nodesRef[t+e]);else{const s=n*i.nodesInfoSize;i.nodesInfo[s+e.taken]&&(r.strokeStyle="rgba(152,11,11,0.8)",r.strokeRect(...u(i.nodeBounds.subarray(t,t+4))))}}function u(e){return[e[0]-e[2],e[1]-e[3],2*e[2],2*e[3]]}!function e(){1!==i.nodeAnchor&&(r.clearRect(0,0,n,t),document.getElementById("info_count").innerText=d.rects.length+"",f(),l(),a()),window.requestAnimationFrame(e)}(),window.addNodes=function(e,s=!1){const o=Math.ceil(Math.sqrt(e)),h=Array(o).fill(null);h.forEach(((i,r)=>{h.forEach(((i,h)=>{const f=c(2,20)*(s||e>=10&&r<.1*o?20:1)/2,l=c(2,20)*(s||e>=10&&h<.1*o?20:1)/2;d.rects.push([c(f,n-f),c(l,t-l),f,l])}))}));const r=performance.now();for(let e=0;e<d.rects.length;e++)i.insert(0,d.rects[e]);const f=performance.now();console.log(`add ${e} duration`,f-r),console.log("allNodes",i.nodeAnchor)}})();
//# sourceMappingURL=demo.bundle.js.map