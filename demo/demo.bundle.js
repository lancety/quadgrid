(()=>{"use strict";function e(e,t){return{bound:e,level:t,nodes:[],rects:[]}}const t=1200;let s=0,n=Math.min(t,800);for(;n>2;)n/=2,s++;const o=new class{constructor(t,s,n=6,o=10){this.width=t,this.height=s,this.cellDepthMax=n,this.cellObjMax=o,this.rects=[],this.root=e([0,0,t,s],0)}split(t){const s=t.level+1,n=t.bound[2]/2,o=t.bound[3]/2,r=t.bound[0],i=t.bound[1];t.nodes[0]=e([r,i,n,o],s),t.nodes[1]=e([r+n,i,n,o],s),t.nodes[2]=e([r+n,i+o,n,o],s),t.nodes[3]=e([r,i+o,n,o],s)}getIndex(e,t){let s=0,n=e.bound[0]+e.bound[2]/2,o=e.bound[1]+e.bound[3]/2;const r=t[1]<o,i=t[0]<n,c=t[0]+t[2]>n,l=t[1]+t[3]>o;return i&&r&&(s|=1),r&&c&&(s|=2),c&&l&&(s|=4),i&&l&&(s|=8),s}merge(e){e.nodes.splice(0),e.rects.push(...this.objectsAll([],e))}inside(e,t){return e[0]>t[0]&&e[1]>t[1]&&e[0]+e[2]<t[0]+t[2]&&e[1]+e[3]<t[1]+t[3]}insertBatch(e,t,s){const n=this.getIndex(e,t);1&n&&this[s](e.nodes[0],t),2&n&&this[s](e.nodes[1],t),4&n&&this[s](e.nodes[2],t),8&n&&this[s](e.nodes[3],t)}insertAsGrid(e,t){if(this.rects.push(t),!0===this.inside(e.bound,t))return!0!==e.covered&&(this.merge(e),e.taken=!0,e.covered=!0),void e.rects.push(t);e.rects.push(t),e.nodes.length?(this.insertBatch(e,t,"insertAsGrid"),e.rects.splice(0)):!0!==e.covered&&e.level<this.cellDepthMax&&(this.split(e),e.rects.forEach((t=>{this.insertBatch(e,t,"insertAsGrid")})),e.rects.splice(0)),0===e.nodes.length&&e.rects.length>0?e.taken=!0:delete e.taken}insertAsTree(e,t){this.rects.push(t),e.nodes.length?this.insertBatch(e,t,"insertAsTree"):(e.rects.push(t),e.rects.length>this.cellObjMax&&e.level<this.cellDepthMax&&(e.nodes.length||this.split(e),e.rects.forEach((t=>this.insertBatch(e,t,"insertAsTree"))),e.rects.splice(0)))}objectsAll(e,t){return t.nodes.length>0?t.nodes.forEach((t=>{this.objectsAll(e,t)})):e.push(...t.rects),e}retrieve(e,t,s){const n=this.getIndex(e,t),o=s||[];if(o.push(...e.rects),e.nodes.length&&(1&n&&this.retrieve(e.nodes[0],t,o),2&n&&this.retrieve(e.nodes[1],t,o),4&n&&this.retrieve(e.nodes[2],t,o),8&n&&this.retrieve(e.nodes[3],t,o)),o.length>0&&console.log("111"),!s)return new Set(o);s.push(...o)}clear(){this.root.nodes.splice(0),this.root.rects.splice(0),delete this.root.taken,delete this.root.covered}}(t,800,s),r=[0,0,10,10],i={activeNodes:new Set},c=document.getElementById("canvas");c.setAttribute("width","1200"),c.setAttribute("height","800"),c.style.background="#333";const l=c.getContext("2d");let d=!1;function h(e,t){return Math.round(e+Math.random()*(t-e))}function a(){var e;l.clearRect(0,0,t,800),document.getElementById("info_count").innerText=o.rects.length+"",document.getElementById("info_involved").innerText=((null===(e=i.activeNodes)||void 0===e?void 0:e.size)||0)/o.rects.length+"",d&&(l.fillStyle="rgba(255,255,255,0.5)",l.fillRect(...r)),o.rects.forEach((e=>{i.activeNodes.has(e)?l.fillStyle="rgba(0, 255, 0)":l.fillStyle="rgba(255, 255, 255)",l.fillRect(...e)})),u(o.root)}function u(e){e.nodes.length?e.nodes.forEach((e=>u(e))):(e.taken?l.strokeStyle="rgba(255,255,255, 0.6)":l.strokeStyle="rgba(255, 0, 255, 0.6)",l.strokeRect(...e.bound))}c.addEventListener("mousemove",(function(e){d=!0,e.offsetX||(e.offsetX=e.layerX-e.target.offsetLeft,e.offsetY=e.layerY-e.target.offsetTop),r[0]=e.offsetX-r[2]/2,r[1]=e.offsetY-r[3]/2})),c.addEventListener("mouseout",(function(e){d=!1})),function e(){d&&console.log("states"),a(),window.requestAnimationFrame(e)}(),window.addNodes=function(e,t=!1){const s=Array(e).fill(null).map(((s,n)=>[h(0,1190),h(0,790),h(2,10)*(t||e>=10&&n<.1*e?10:1),h(2,10)*(t||e>=10&&n>.9*e?10:1)])),n=performance.now();for(let e=0;e<s.length;e++)o.insertAsGrid(o.root,s[e]);const r=performance.now();console.log(`add ${e} duration`,r-n),a(),console.log(`ui ${e} duration`,performance.now()-r)}})();
//# sourceMappingURL=demo.bundle.js.map