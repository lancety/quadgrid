(()=>{"use strict";const e=1200,t=1e3;let n=0,s=Math.min(e,t);for(;s>2;)s/=2,n++;const o=new class{constructor(e,t,n=6){this.width=e,this.height=t,this.cellDepthMax=n,this.cellBatchSize=1e5,this.nodeAnchor=0,this.cellMinSize=Math.min(e,t)/Math.pow(2,n),this.nodeX=new Float32Array(this.cellBatchSize),this.nodeY=new Float32Array(this.cellBatchSize),this.nodeW=new Float32Array(this.cellBatchSize),this.nodeH=new Float32Array(this.cellBatchSize),this.nodesRef=new Int32Array(4*this.cellBatchSize),this.nodesLevel=new Int8Array(this.cellBatchSize),this.nodesCovered=new Int8Array(this.cellBatchSize),this.nodesTaken=new Int8Array(this.cellBatchSize),this.newNode(e/2,t/2,e/2,t/2,0)}newNode(e,t,n,s,o){this.nodeX[this.nodeAnchor]=e,this.nodeY[this.nodeAnchor]=t,this.nodeW[this.nodeAnchor]=n,this.nodeH[this.nodeAnchor]=s,this.nodesLevel[this.nodeAnchor]=o;const i=this.nodeAnchor;return this.nodeAnchor++,i}split(e){const t=4*e,n=this.nodesLevel[e]+1,s=this.nodeX[e],o=this.nodeY[e],i=this.nodeW[e]/2,h=this.nodeH[e]/2;this.nodesRef.set([this.newNode(s-i,o-h,i,h,n),this.newNode(s+i,o-h,i,h,n),this.newNode(s+i,o+h,i,h,n),this.newNode(s-i,o+h,i,h,n)],t)}getIndex(e,t){let n=0,s=this.nodeX[e],o=this.nodeY[e];const i=t[1]-t[3]<o,h=t[0]-t[2]<s,d=t[0]+t[2]>s,r=t[1]+t[3]>o;return h&&i&&(n|=1),i&&d&&(n|=2),d&&r&&(n|=4),h&&r&&(n|=8),n}merge(e){this.nodesRef.set([0,0,0,0],e)}inside(e,t){const n=this.nodeX[e]-t[0],s=this.nodeY[e]-t[1],o=this.nodeW[e]-t[2],i=this.nodeH[e]-t[3];return o<=0&&i<=0&&n-o>=0&&s-i>=0&&n+o<=0&&s+i<=0}insertBatch(e,t,n){const s=this.getIndex(e/4,t);1&s&&this[n](this.nodesRef[e],t),2&s&&this[n](this.nodesRef[e+1],t),4&s&&this[n](this.nodesRef[e+2],t),8&s&&this[n](this.nodesRef[e+3],t)}insert(e,t){const n=4*e;!0===this.inside(e,t)?1!==this.nodesCovered[e]&&(this.merge(n),this.nodesTaken[e]=1,this.nodesCovered[e]=1):(this.nodesLevel[e]<this.cellDepthMax&&!this.nodesCovered[e]&&!this.nodesRef[n]&&this.split(e),this.nodesRef[n]&&this.insertBatch(n,t,"insert"),0===this.nodesRef[n]?this.nodesTaken[e]=1:this.nodesTaken[e]=0)}}(e,t,n),i={rects:[]},h=document.getElementById("canvas");h.setAttribute("width","1200"),h.setAttribute("height","1000"),h.style.background="#111";const d=h.getContext("2d");function r(e,t){return Math.round(e+Math.random()*(t-e))}function c(e){if(0===e)return;const t=4*(e||0);if(o.nodesRef[t])for(let e=0;e<4;e++)c(o.nodesRef[t+e]);else o.nodesTaken[e]||(d.strokeStyle="rgba(0, 255, 0, 0.4)",d.strokeRect(...f(e)))}function l(e){if(0===e)return;const t=4*(e||0);if(o.nodesRef[t])for(let e=0;e<4;e++)l(o.nodesRef[t+e]);else o.nodesTaken[e]&&(d.fillStyle="rgba(6, 6, 6, 0.8)",d.strokeRect(...f(e)))}function a(e){if(0===e)return;const t=4*(e||0);if(o.nodesRef[t])for(let e=0;e<4;e++)a(o.nodesRef[t+e]);else o.nodesTaken[e]&&(d.strokeStyle="rgba(152,11,11,0.8)",d.strokeRect(...f(e)))}function f(e){const{nodeX:t,nodeY:n,nodeW:s,nodeH:i}=o,h=t[e],d=n[e],r=s[e],c=i[e];return[h-r,d-c,2*r,2*c]}!function n(){1!==o.nodeAnchor&&(d.clearRect(0,0,e,t),document.getElementById("info_count").innerText=i.rects.length+"",c(),l(),a()),window.requestAnimationFrame(n)}(),window.addNodes=function(n,s=!1){const h=Math.ceil(Math.sqrt(n)),d=Array(h).fill(null);d.forEach(((o,c)=>{d.forEach(((o,d)=>{const l=r(2,10)*(s||n>=10&&c<.1*h?20:1)/2,a=r(2,10)*(s||n>=10&&d<.1*h?20:1)/2;i.rects.push([r(l,e-l),r(a,t-a),l,a])}))}));const c=performance.now();for(let e=0;e<i.rects.length;e++)o.insert(0,i.rects[e]);const l=performance.now();console.log(`add ${n} duration`,l-c),console.log("allNodes",o.nodeAnchor)}})();
//# sourceMappingURL=demo.bundle.js.map